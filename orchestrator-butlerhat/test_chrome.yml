apiVersion: apps/v1
kind: Deployment
metadata:
  name: chrome-1 # Unique per instance
spec:
  selector:
    matchLabels:
      app: chrome-1 # Must match service labels
  replicas: 1
  template:
    metadata:
      labels:
        app: chrome-1
    spec:
      # securityContext:
      #   seccompProfile:
      #     type: Localhost
      #     localhostProfile: "profiles/seccomp_profile.json"
      #   runAsUser: 1000 # Assuming pwuser corresponds to UID 1001
      hostIPC: true
      containers:
      - name: chrome-playwright-container
        image: playwright-chrome
        imagePullPolicy: IfNotPresent
        securityContext:
          capabilities:
            add:
              - SYS_ADMIN
        env:
        - name: WS_PATH
          value: "endpoint-1"
        volumeMounts:
        - name: dev-shm
          mountPath: /dev/shm
        ports:
        - containerPort: 4445 # playwright port
        - containerPort: 6080 # noVNC port
        resources:
          limits:
            memory: "1Gi"
            cpu: "1"
      volumes:
      - name: dev-shm
        emptyDir:
          medium: Memory

---

apiVersion: v1
kind: Service
metadata:
  name: service-novnc-1 # Unique per instance
spec:
  type: NodePort
  selector:
    app: chrome-1 # Must match deployment labels
  ports:
  - name: novnc # Name for the playwright port
    protocol: TCP
    port: 6080
    targetPort: 6080

---

apiVersion: v1
kind: Service
metadata:
  name: service-playwright-1 # Unique per instance
spec:
  selector:
    app: chrome-1 # Must match deployment labels
  ports:
  - name: playwright # Name for the playwright port
    protocol: TCP
    port: 4445
    targetPort: 4445


---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: cloudflared
  name: cloudflared-deployment
  namespace: ingress-nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      pod: cloudflared
  template:
    metadata:
      labels:
        pod: cloudflared
    spec:
      containers:
      - command:
        - cloudflared
        - tunnel
        - --metrics
        - 0.0.0.0:2000
        - run
        args:
        - --token
        - eyJhIjoiODM3MzFmODE0MDVmMTdiNDI5ZDZiZTcxOWMyMzExMzAiLCJ0IjoiMTJkMTJjOWQtODkwMi00N2E0LTlhOTAtZTNkY2QxNDBjYjhhIiwicyI6IlpHVmhaVE13WldFdFpUUXhNeTAwT1RZNExUZzJPR0l0TURKbE9UazNORGN4TTJFMSJ9
        image: cloudflare/cloudflared:latest
        name: cloudflared
        resources:
          limits:
            memory: "1Gi"
            cpu: "1"
        livenessProbe:
          httpGet:
          # Cloudflared has a /ready endpoint which returns 200 if and only if
          # it has an active connection to the edge.
            path: /ready
            port: 2000
          failureThreshold: 1
          initialDelaySeconds: 10
          periodSeconds: 10

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-chrome
  annotations:
    # Use rewrite-target to direct to the correct service
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  rules:
  - http:
      paths:
      - path: /playwright3(/|$)(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: service-playwright-1
            port:
              number: 4445
      - path: /novnc3(/|$)(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: service-novnc-1
            port:
              number: 6080
              
  ingressClassName: nginx # if you are using a specific Ingress class